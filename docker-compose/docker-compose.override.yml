services:
  clean-architecture-db:
    container_name: clean-architecture-db
    environment:
      SA_PASSWORD: "Ahmet1990"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - '1453:1433'
    networks:
      - blogNetwork

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - blogNetwork

#  clean-architecture-minimal-api:
#    container_name: clean-architecture-minimal-api
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
#      - "ConnectionStrings:Default=Server=clean-architecture-db, 1433;Database=MinimalApiCleanArchitecture;User Id=sa;Password=Ahmet1990;TrustServerCertificate=true;"
#      - "AppSettings:ApplicationName=MinimalApiCleanArchitecture.MinimalApi"
#      - "AppSettings:Instance=2"
#      - "GrpcSettings:AuthorGrpcServiceUrl="
#      - "GrpcSettings:AuthorGrpcServiceConsulName=MinimalApiCleanArchitectureGrpcService"
#      - "RabbitMqConfig:VHostname=/"
#      - "RabbitMqConfig:Hostname=rabbitmq"
#      - "RabbitMqConfig:Username=rabbitmq"
#      - "RabbitMqConfig:Password=rabbitmq"
#      - "RabbitMqConfig:Exchange=LoggerQueue"
#      - "RabbitMqConfig:ExchangeType=fanout"
#      - "RabbitMqConfig:Port=5672"
#      - "JaegerSettings:Host=http://jaeger"
#      - "JaegerSettings:Port=4317"
#      - "JaegerSettings:SourceName=Api"
#      - "JaegerSettings:ServiceName=MinimalApiCleanArchitecture.MinimalApi"
#      - "ExporterSettings:UseExporter=jaeger"
#      - "Zipkin:Endpoint=http://zipkin-server:9411/api/v2/spans"
#      - "ConsulConfig:Address=http://consul:8500"
#      - "ConsulConfig:ServiceAddress=http://clean-architecture-minimal-api"
#      - "ConsulConfig:ServiceName=MinimalApiCleanArchitectureMinimalApi"
#      - "ConsulConfig:ServiceId=MinimalApiCleanArchitectureMinimalApi"
#    depends_on:
#      - clean-architecture-db
#      - clean-architecture-grpc-service
#      - rabbitmq
#      - jaeger
#      - zipkin-server
#      - consul
#    ports:
#      - "8001:8080"
#    restart: always
#    networks:
#      - blogNetwork
#
#  clean-architecture-grpc-service:
#    container_name: clean-architecture-grpc-service
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
#      - "ConnectionStrings:Default=Server=clean-architecture-db, 1433;Database=MinimalApiCleanArchitecture;User Id=sa;Password=Ahmet1990;TrustServerCertificate=true;"
#      - "AppSettings:ApplicationName=MinimalApiCleanArchitecture.GrpcService"
#      - "AppSettings:Instance=2"
#      - "RabbitMqConfig:VHostname=/"
#      - "RabbitMqConfig:Hostname=rabbitmq"
#      - "RabbitMqConfig:Username=rabbitmq"
#      - "RabbitMqConfig:Password=rabbitmq"
#      - "RabbitMqConfig:Exchange=LoggerQueue"
#      - "RabbitMqConfig:ExchangeType=fanout"
#      - "RabbitMqConfig:Port=5672"
#      - "JaegerSettings:Host=http://jaeger"
#      - "JaegerSettings:Port=4317"
#      - "JaegerSettings:SourceName=Grpc"
#      - "JaegerSettings:ServiceName=MinimalApiCleanArchitecture.GrpcService"
#      - "ExporterSettings:UseExporter=jaeger"
#      - "Zipkin:Endpoint=http://zipkin-server:9411/api/v2/spans"
#      - "ConsulConfig:Address=http://consul:8500"
#      - "ConsulConfig:ServiceAddress=http://clean-architecture-grpc-service:8080"
#      - "ConsulConfig:ServiceName=MinimalApiCleanArchitectureGrpcService"
#      - "ConsulConfig:ServiceId=MinimalApiCleanArchitectureGrpcService"
#    depends_on:
#      - clean-architecture-db
#      - rabbitmq
#      - jaeger
#      - zipkin-server
#      - consul
#    ports:
#      - "8002:8080"
#    restart: always
#    networks:
#      - blogNetwork
#
#  clean-architecture-log-consumer:
#    container_name: clean-architecture-log-consumer
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
#      - "ElasticSearchConfig:ConnectionString=http://elasticsearch:9200"
#      - "ElasticSearchConfig:PingTimeMilliSeconds=10000"
#      - "RabbitMqConfig:Hostname=rabbitmq"
#      - "RabbitMqConfig:VHostname=/"
#      - "RabbitMqConfig:Username=rabbitmq"
#      - "RabbitMqConfig:Password=rabbitmq"
#      - "RabbitMqConfig:Exchange=LoggerQueue"
#      - "RabbitMqConfig:ExchangeType=fanout"
#      - "RabbitMqConfig:Port=5672"
#    depends_on:
#      - rabbitmq
#      - elasticsearch
#    restart: always
#    networks:
#      - blogNetwork

  elasticsearch:
    container_name: elasticsearch
    restart: always
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
    networks:
      - blogNetwork
    
  kibana:
    container_name: kibana
    restart: always
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - 5601:5601
    networks:
      - blogNetwork
    depends_on:
      - elasticsearch

  rabbitmq:
    container_name: rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - blogNetwork
  jaeger:
    container_name: jaeger
    environment:
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=true
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
    ports:
      - 4317:4317
      - 4318:4318
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 14269:14269
      #- 9411:9411
    volumes:
      - jaeger-data:/badger
    networks:
      - blogNetwork
  zipkin-server:
    container_name: zipkin-server
    ports:
      - '9411:9411'
    networks:
      - blogNetwork

  consul:
    container_name: consul
    ports:
      - 8500:8500
      - 8600:8600/tcp
      - 8600:8600/udp
    networks:
      - blogNetwork